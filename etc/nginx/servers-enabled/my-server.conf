# redirect to https
# replace $YOUR_SERVER_NAME with your server's name :)

server {
	listen 80;
	listen [::]:80;
	server_name $YOUR_SERVER_NAME;
	return 301 https://$server_name$request_uri;
}

map $http_upgrade $connection_upgrade {
	default upgrade;
	''      close;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	access_log  logs/ssl_access.log;
	error_log   logs/ssl_error.log;
	ssl_certificate /etc/letsencrypt/live/$YOUR_SERVER_NAME/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/$YOUR_SERVER_NAME/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/$YOUR_SERVER_NAME/chain.pem;
	ssl_session_timeout 1d;
	ssl_session_cache shared:SSL:50m;
	ssl_session_tickets off;
	ssl_prefer_server_ciphers on;
	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	add_header Strict-Transport-Security max-age=15768000;
	add_header X-Content-Type-Options nosniff;
	ssl_stapling on;
	ssl_stapling_verify on;
	server_name $YOUR_SERVER_NAME;

  location /gearshifft/ {
		rewrite ^/gearshifft/(.*)$ /$1 break;
		proxy_pass http://localhost:1337;
		proxy_redirect http://localhost:1337/ $scheme://$host/gearshifft/;
		proxy_set_header        Host $host;
		proxy_set_header        X-Real-IP $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header        X-Forwarded-Proto $scheme;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		proxy_read_timeout 20d;
		proxy_buffering off;
	}
  
	root /usr/share/nginx/html;
	location / {
		index index.php index.html index.htm;
	}
}
